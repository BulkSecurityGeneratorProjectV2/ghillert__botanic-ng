var botanicApp;!function(t){"use strict";var o=function(){function t(t,o){t.debugEnabled(!0),o.options.timeOut=3e3,o.options.positionClass="toast-top-right",o.options.preventDuplicates=!0,o.options.progressBar=!0}return t.$inject=["$logProvider","toastr"],t}();t.Config=o}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";var o=function(){function t(t,o){t.state("plants",{"abstract":!0,template:"<ui-view/>"}).state("plants.viewAll",{url:"/plants",controller:"PlantController",templateUrl:"app/components/plants/plants.html"}).state("plants.addPlant",{url:"/plants/add",controller:"AddPlantController",templateUrl:"app/components/plants/add-plant.html",data:{authenticate:!0}}).state("plants.plantDetails",{url:"/plants/{plantId}",controller:"PlantDetailsController",templateUrl:"app/components/plants/plant-details.html"}).state("garden",{url:"/garden",controller:"GardenController",templateUrl:"app/components/garden/garden.html"}).state("login",{url:"/login",controller:"LoginController",templateUrl:"app/components/login/login.html"}).state("logout",{url:"/logout",controller:"LogoutController"}).state("about",{url:"/about",controller:"AboutController",templateUrl:"app/components/about/about.html"}),o.otherwise("/plants")}return t.$inject=["$stateProvider","$urlRouterProvider"],t}();t.RouterConfig=o}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";var o=function(){function t(t,o,e,n){o.$state=e,o.$stateParams=n,t.debug("runBlock end")}return t.$inject=["$log","$rootScope","$state","$stateParams"],t}();t.RunBlock=o}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";var o=function(){function t(t,o,e){this.awesomeThings=new Array,this.webDevTec=o,this.classAnimation="",this.activate(t)}return t.$inject=["$timeout","webDevTec","toastr"],t.prototype.activate=function(t){this.getWebDevTec();var o=this;t(function(){o.classAnimation="rubberBand"},4e3)},t.prototype.showToastr=function(){toastr.info('Fork <a href="https://github.com/Swiip/generator-gulp-angular" target="_blank"><b>generator-gulp-angular</b></a>'),this.classAnimation=""},t.prototype.getWebDevTec=function(){this.awesomeThings=this.webDevTec.tec},t}();t.MainController=o}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";function o(){return{restrict:"E",scope:{creationDate:"="},templateUrl:"app/components/navbar/navbar.html",controller:e,controllerAs:"vm",bindToController:!0}}t.acmeNavbar=o;var e=function(){function t(t){this.relativeDate=t(1444172900432).fromNow()}return t.$inject=["moment"],t}()}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";function o(t){return{restrict:"E",scope:{extraValues:"="},template:"&nbsp;",link:e,controller:n,controllerAs:"vm"}}function e(t,o,e,n){var a,l=malarkey(o[0],{typeSpeed:40,deleteSpeed:40,pauseDelay:800,loop:!0,postfix:" "});o.addClass("acme-malarkey"),angular.forEach(t.extraValues,function(t){l.type(t).pause()["delete"]()}),a=t.$watch("vm.contributors",function(t,o){angular.forEach(n.contributors,function(t){l.type(t.login).pause()["delete"]()})}),t.$on("$destroy",function(){a()})}o.$inject=["malarkey"],t.acmeMalarkey=o;var n=function(){function t(t,o){this.contributors=[],this.$log=t,this.githubContributor=o,this.activate()}return t.$inject=["$log","githubContributor"],t.prototype.activate=function(){var t=this;return this.getContributors().then(function(){t.$log.info("Activated Contributors View")})},t.prototype.getContributors=function(){var t=this;return this.githubContributor.getContributors(10).then(function(o){return t.contributors=o,t.contributors})},t}()}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";var o=function(){function t(){var t=[{title:"AngularJS",url:"https://angularjs.org/",description:"HTML enhanced for web apps!",logo:"angular.png"},{title:"BrowserSync",url:"http://browsersync.io/",description:"Time-saving synchronised browser testing.",logo:"browsersync.png"},{title:"GulpJS",url:"http://gulpjs.com/",description:"The streaming build system.",logo:"gulp.png"},{title:"Jasmine",url:"http://jasmine.github.io/",description:"Behavior-Driven JavaScript.",logo:"jasmine.png"},{title:"Karma",url:"http://karma-runner.github.io/",description:"Spectacular Test Runner for JavaScript.",logo:"karma.png"},{title:"Protractor",url:"https://github.com/angular/protractor",description:"End to end test framework for AngularJS applications built on top of WebDriverJS.",logo:"protractor.png"},{title:"Bootstrap",url:"http://getbootstrap.com/",description:"Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.",logo:"bootstrap.png"},{title:"Less",url:"http://lesscss.org/",description:"Less extends the CSS language, adding features that allow variables, mixins, functions and many other techniques.",logo:"less.png"},{title:"TypeScript",url:"http://www.typescriptlang.org/",description:"TypeScript, a typed superset of JavaScript that compiles to plain JavaScript.",logo:"typescript.png"}];this.data=t.map(function(t){return t.rank=Math.random(),t})}return Object.defineProperty(t.prototype,"tec",{get:function(){return this.data},enumerable:!0,configurable:!0}),t}();t.WebDevTecService=o}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";var o=function(){function t(t,o){this.apiHost="https://api.github.com/repos/Swiip/generator-gulp-angular",this.$log=t,this.$http=o}return t.$inject=["$log","$http"],t.prototype.getContributors=function(t){var o=this;return void 0===t&&(t=30),this.$http.get(this.apiHost+"/contributors?per_page="+t).then(function(t){return t.data})["catch"](function(t){o.$log.error("XHR Failed for getContributors.\n",t.data)})},t}();t.GithubContributor=o}(botanicApp||(botanicApp={}));var botanicApp;!function(t){"use strict";angular.module("botanicApp",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ui.router","angularFileUpload","wu.masonry"]).constant("malarkey",malarkey).constant("toastr",toastr).constant("moment",moment).constant("appConfiguration",{botanicApiUrl:window.location.protocol+"//"+window.location.host+"/api",xAuthTokenHeaderName:"x-auth-token"}).config(t.Config).config(t.RouterConfig).run(t.RunBlock).service("githubContributor",t.GithubContributor).service("webDevTec",t.WebDevTecService).controller("MainController",t.MainController).directive("acmeNavbar",t.acmeNavbar).directive("acmeMalarkey",t.acmeMalarkey).config(["$httpProvider",function(t){}]).run(["$rootScope","$http","$state","$cookieStore","appConfiguration","$log",function(t,o,e,n,a,l){t.$on("$viewContentLoaded",function(){delete t.error}),t.$on("$stateChangeStart",function(o,n){void 0!==n.data&&void 0!==n.data.authenticate&&(l.info("Need to authenticate",n),l.info("User authenticated?",t.isAuthenticated()),n.data.authenticate&&!t.isAuthenticated()&&(l.info("Setting desired state to "+n.name),t.desiredToState=n.name,e.transitionTo("login"),o.preventDefault()))}),t.isAuthenticated=function(){return void 0===t.user?!1:void 0===t.user.isAuthenticated?!1:t.user.isAuthenticated?!0:!1},t.hasRole=function(o){return t.isAuthenticated()?void 0===t.user.roles[o]?!1:t.user.roles[o]:!1}}])}(botanicApp||(botanicApp={})),angular.module("botanicApp").controller("AboutController",["$scope",function(t){console.log("About Controller"),t.message="Spring Rocks"}]),angular.module("botanicApp").controller("GardenController",["$scope",function(t){t.images=[],console.log("GardenController");var o=new SockJS("//"+window.location.host+"/websocketbroker"),e=Stomp.over(o);e.debug=function(){},e.connect({},function(o){console.log("Connected...",o),e.subscribe("/queue/pictures",function(o){var e=JSON.parse(o.body);console.log("Receiving Garden Picture",e.name),console.log(t.images.length),0===t.images.length&&(t.images=[]),t.images.length>5&&t.images.shift(),t.images.push(e),t.$apply()})},function(t){console.log("STOMP protocol error",t)})}]),angular.module("botanicApp").controller("LoginController",["$log","$scope","$rootScope","$state","$http","$cookieStore","LoginService","appConfiguration",function(t,o,e,n,a,l,i,s){o.login=function(){t.info("Logging in...",o.user),i.authenticate(o.user,function(o){t.info("got user:",o),e.user=o,e.user.isAuthenticated=!0,a.defaults.headers.common[s.xAuthTokenHeaderName]=o.token,console.log("$http.defaults.headers.common[appConfiguration.xAuthTokenHeaderName]",a.defaults.headers.common[s.xAuthTokenHeaderName]),void 0!==e.desiredToState?(n.go(e.desiredToState),e.desiredToState=void 0):n.go("plants.viewAll")})}}]).controller("LogoutController",["$log","$rootScope","$http","$cookieStore","appConfiguration","$state",function(t,o,e,n,a,l){t.info("Logging out..."),delete o.user,delete e.defaults.headers.common[a.xAuthTokenHeaderName],n.remove("user"),l.go("plants.viewAll")}]),angular.module("botanicApp").factory("LoginService",["$resource",function(t){return t(":action",{},{authenticate:{method:"POST",url:"/api/authenticate",params:{action:"authenticate"}}})}]),angular.module("botanicApp").controller("PlantController",["$scope","$log","$http","$state","appConfiguration",function(t,o,e,n,a){t.addPlant=function(){o.info(n),o.info(n.includes("plants")),n.go("plants.addPlant")},t.viewPlantDetails=function(t){o.info("Show details for plant with Id: "+t.id),n.go("plants.plantDetails",{plantId:t.id})},t.deletePlant=function(n){o.info("Deleting plant with Id: "+n.id),console.log("$http.defaults.headers.common[appConfiguration.xAuthTokenHeaderName]",e.defaults.headers.common[a.xAuthTokenHeaderName]),e["delete"](a.botanicApiUrl+"/plants/"+n.id).then(function(){t.loadPlants()})},t.loadPlants=function(){var n=e.get(a.botanicApiUrl+"/plants");n.then(function(e){o.info("Retrieved plants",e),console.log(e),e.data._embedded&&(t.plants=e.data._embedded.plants)})},t.loadPlants()}]).controller("AddPlantController",["$scope","$state","$log","$http","appConfiguration",function(t,o,e,n,a){t.map={center:{latitude:33.7489954,longitude:-84.3879824},zoom:12,events:{tilesloaded:function(t,o,n){e.log("Map has loaded: "+o,t,n)},click:function(o,n,a){e.log("user defined event: "+n,o,a);var l=a[0],i=l.latLng.lat(),s=l.latLng.lng();t.map.clickedMarker={id:0,title:"You clicked here lat: "+i+" lon: "+s,latitude:i,longitude:s},t.plant.location.latitude=i,t.plant.location.longitude=s,t.$apply()}}},t.plant={genus:"",species:"",commonName:"",location:{latitude:0,longitude:0}},t.goBack=function(){o.go("plants.viewAll")},t.getMyLocation=function(){e.info("Retrieving Location Information"),navigator.geolocation.getCurrentPosition(function(o){e.info("Location data retrieved",o);var n=o.coords;t.$apply(function(){t.plant.location.latitude=n.latitude,t.plant.location.longitude=n.longitude})})},t.submitPlant=function(){e.info("Adding New Plant",t.plant);var l=n.post(a.botanicApiUrl+"/plants",t.plant);l.then(function(t){e.info(t),o.go("plants.viewAll")})},t.$watch("plant.location",function(){t.plant.location.latitude&&t.plant.location.longitude&&(t.map.center.latitude=t.plant.location.latitude,t.map.center.longitude=t.plant.location.longitude)},!0)}]),angular.module("botanicApp").controller("PlantDetailsController",["$scope","$state","$stateParams","$http","$log","appConfiguration","FileUploader","$rootScope",function(t,o,e,n,a,l,i,s){var r=e.plantId,c=n.get(l.botanicApiUrl+"/plants/"+r),p=n.get(l.botanicApiUrl+"/plants/"+r+"/images");t.plant={species:"",genus:"",location:{latitude:0,longitude:0}},c.then(function(o){a.info(o),t.plant=o.data,t.map={center:{latitude:t.plant.location.latitude,longitude:t.plant.location.longitude},zoom:12},a.info("Map Data",t.Map)}),p.then(function(o){a.info(o),o.data._embedded&&(t.images=o.data._embedded.images)}),t.goBack=function(){o.go("plants.viewAll")},t.map={center:{latitude:45,longitude:-73},zoom:12};var d={};console.log("appConfiguration",l),null!=s.user&&(d[l.xAuthTokenHeaderName]=s.user.token);var u=t.uploader=new i({url:"api/plants/"+r+"/upload",headers:d});u.filters.push({name:"imageFilter",fn:function(t,o){console.log("options",o);var e="|"+t.type.slice(t.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(e)}}),u.onWhenAddingFileFailed=function(t,o,e){console.info("onWhenAddingFileFailed",t,o,e)},u.onAfterAddingFile=function(t){console.info("onAfterAddingFile",t)},u.onAfterAddingAll=function(t){console.info("onAfterAddingAll",t)},u.onBeforeUploadItem=function(t){console.info("onBeforeUploadItem",t)},u.onProgressItem=function(t,o){console.info("onProgressItem",t,o)},u.onProgressAll=function(t){console.info("onProgressAll",t)},u.onSuccessItem=function(o,e,n,a){console.info("onSuccessItem",o,e,n,a),"undefined"==typeof t.images&&(t.images=[]),t.images.push(e)},u.onErrorItem=function(t,o,e,n){console.info("onErrorItem",t,o,e,n)},u.onCancelItem=function(t,o,e,n){console.info("onCancelItem",t,o,e,n)},u.onCompleteItem=function(t,o,e,n){console.info("onCompleteItem",t,o,e,n)},u.onCompleteAll=function(){console.info("onCompleteAll")},console.info("uploader",u)}]),angular.module("botanicApp").run(["$templateCache",function(t){t.put("app/main/main.html",'<div class="container"><div><acme-navbar creationdate="main.creationDate"></acme-navbar></div><div class="jumbotron text-center"><h1>\'Allo, \'Allo!</h1><p class="lead"><img src="assets/images/yeoman.png" alt="I\'m Yeoman"><br>Always a pleasure scaffolding your apps.</p><p class="animated infinite" ng-class="main.classAnimation"><button type="button" class="btn btn-lg btn-success" ng-click="main.showToastr()">Splendid Toastr</button></p><p>With ♥ thanks to the contributions of<acme-malarkey extra-values="[\'Yeoman\', \'Gulp\', \'Angular\']"></acme-malarkey></p></div><div class="row"><div class="col-sm-6 col-md-4" ng-repeat="awesomeThing in main.awesomeThings | orderBy:\'rank\'"><div class="thumbnail"><img class="pull-right" ng-src="assets/images/{{ awesomeThing.logo }}" alt="{{ awesomeThing.title }}"><div class="caption"><h3>{{ awesomeThing.title }}</h3><p>{{ awesomeThing.description }}</p><p><a ng-href="{{awesomeThing.url}}">{{ awesomeThing.url }}</a></p></div></div></div></div></div>'),t.put("app/components/about/about.html",'<h1>About</h1><p>You can find the source code at:</p><p><a href="https://github.com/ghillert/botanic-ng">https://github.com/ghillert/botanic-ng</a></p><p>{{message}}</p>'),t.put("app/components/garden/garden.html",'<h1>Garden Pictures</h1><div class="row" ng-show="images"><div class="col-md-12"><div masonry=""><div class="masonry-brick" ng-repeat="plantImage in images"><img ng-src="data:image/PNG;base64,{{plantImage.image}}" width="330px" style="margin: 5px;" title="{{plantImage.name}}"></div></div></div></div>'),t.put("app/components/navbar/navbar.html",'<nav class="navbar navbar-static-top navbar-inverse"><div class="container-fluid"><div class="navbar-header"><a class="navbar-brand" href="https://github.com/Swiip/generator-gulp-angular"><span class="glyphicon glyphicon-home"></span> Gulp Angular</a></div><div class="collapse navbar-collapse" id="bs-example-navbar-collapse-6"><ul class="nav navbar-nav"><li class="active"><a ng-href="#">Home</a></li><li><a ng-href="#">About</a></li><li><a ng-href="#">Contact</a></li></ul><ul class="nav navbar-nav navbar-right acme-navbar-text"><li>Application was created {{ vm.relativeDate }}.</li></ul></div></div></nav>'),t.put("app/components/plants/add-plant.html",'<h1>Add Plant</h1><form class="form-horizontal" role="form" ng-submit="submitPlant()" novalidate=""><div class="form-group"><label for="genus" class="col-sm-2 control-label">Genus</label><div class="col-sm-10"><input type="text" class="form-control" id="genus" ng-model="plant.genus" name="genus" placeholder="The Genus of the Plant"></div></div><div class="form-group"><label for="species" class="col-sm-2 control-label">Species</label><div class="col-sm-10"><input type="text" class="form-control" id="species" ng-model="plant.species" name="species" placeholder="The Species of the Plant"></div></div><div class="form-group"><label for="commonName" class="col-sm-2 control-label">Common Name</label><div class="col-sm-10"><input type="text" class="form-control" id="commonName" ng-model="plant.commonName" name="commonName" placeholder="Common Name of the Plant"></div></div><div class="form-group"><label for="latitude" class="col-sm-2 control-label">Latitude</label><div class="col-sm-10"><input type="text" class="form-control" id="latitude" required="" ng-model="plant.location.latitude" name="latitude" placeholder="Latitude"> <button type="button" class="btn btn-default" ng-click="getMyLocation()">Get My Location</button></div></div><div class="form-group"><label for="longitude" class="col-sm-2 control-label">Longitude</label><div class="col-sm-10"><input type="text" class="form-control" id="longitude" required="" ng-model="plant.location.longitude" name="longitude" placeholder="Longitude"></div></div><div class="form-group"><div class="col-sm-offset-2 col-sm-10"><button type="button" class="btn btn-default" ng-click="goBack()">Cancel</button> <button type="submit" class="btn btn-default">Add Plant</button></div></div></form><pre>{{plant}}</pre><google-map center="map.center" zoom="map.zoom" draggable="true" events="map.events"><marker coords="plant.location"></marker></google-map>'),t.put("app/components/plants/plant-details.html",'<style>\n	.my-drop-zone { border: dotted 2px lightgray; }\n	.nv-file-over { border: dotted 2px red; } /* Default class applied to drop zones on over */\n	.another-file-over-class { border: dotted 3px green; }\n\n/* canvas.upload {\n	background-color: #f3f3f3;\n	-webkit-box-shadow: 3px 3px 3px 0 #e3e3e3;\n	-moz-box-shadow: 3px 3px 3px 0 #e3e3e3;\n	box-shadow: 3px 3px 3px 0 #e3e3e3;\n	border: 1px solid #c3c3c3;\n	height: 100px;\n	margin: 6px 0 0 6px;\n} */\n</style><h1>Plant Details</h1><div class="row"><div class="col-md-6"><div class="row"><div class="col-md-3"><strong>Genus</strong></div><div class="col-md-9">{{plant.genus}}</div></div><div class="row"><div class="col-md-3"><strong>Species</strong></div><div class="col-md-9">{{plant.species}}</div></div><div class="row"><div class="col-md-3"><strong>Created</strong></div><div class="col-md-9">{{plant.createdDate}}</div></div><div class="row"><div class="col-md-3"><strong>Location</strong></div><div class="col-md-9">Latitude: {{plant.location.latitude}}, Longitude: {{plant.location.longitude}}</div></div></div><div class="col-md-6"><google-map center="map.center" zoom="map.zoom" draggable="true"><marker coords="plant.location"></marker><markers idkey="id" coords="\'self\'" icon="\'icon\'" docluster="true" models="stores" dorebuildall="true"></markers></google-map></div></div><h2>Pictures</h2><div class="row" ng-show="images"><div class="col-md-12"><div masonry=""><div class="masonry-brick" ng-repeat="plantImage in images"><img ng-src="data:image/PNG;base64,{{plantImage.image}}" width="330px" style="margin: 5px;" title="{{plantImage.name}}"></div></div></div></div><div class="row" ng-hide="!images"><div class="col-md-12">No images available.</div></div><h2 ng-show="hasRole(\'ROLE_ADMIN\')">Upload Pictures</h2><div class="row" nv-file-drop="" uploader="uploader" ng-show="hasRole(\'ROLE_ADMIN\')"><div class="col-md-3"><h3>Select files</h3><div ng-show="uploader.isHTML5"><div class="well my-drop-zone" nv-file-over="" uploader="uploader">Base drop zone</div><div nv-file-drop="" uploader="uploader" options="{ url: \'/foo\' }"><div nv-file-over="" uploader="uploader" over-class="another-file-over-class" class="well my-drop-zone">Another drop zone with its own settings</div></div></div><input type="file" nv-file-select="" uploader="uploader" multiple=""><br></div><div class="col-md-9" style="margin-bottom: 40px"><h2>Uploads only images (with canvas preview)</h2><h3>The queue</h3><p>Queue length: {{ uploader.queue.length }}</p><table class="table"><thead><tr><th width="50%">Name</th><th ng-show="uploader.isHTML5">Size</th><th ng-show="uploader.isHTML5">Progress</th><th>Status</th><th>Actions</th></tr></thead><tbody><tr ng-repeat="item in uploader.queue"><td><strong>{{ item.file.name }}</strong><div ng-show="uploader.isHTML5" ng-thumb="{ file: item._file, height: 100 }"></div></td><td ng-show="uploader.isHTML5" nowrap="">{{ item.file.size/1024/1024|number:2 }} MB</td><td ng-show="uploader.isHTML5"><div class="progress" style="margin-bottom: 0;"><div class="progress-bar" role="progressbar" ng-style="{ \'width\': item.progress + \'%\' }"></div></div></td><td class="text-center"><span ng-show="item.isSuccess"><i class="glyphicon glyphicon-ok"></i></span> <span ng-show="item.isCancel"><i class="glyphicon glyphicon-ban-circle"></i></span> <span ng-show="item.isError"><i class="glyphicon glyphicon-remove"></i></span></td><td nowrap=""><button type="button" class="btn btn-success btn-xs" ng-click="item.upload()" ng-disabled="item.isReady || item.isUploading || item.isSuccess"><span class="glyphicon glyphicon-upload"></span> Upload</button> <button type="button" class="btn btn-warning btn-xs" ng-click="item.cancel()" ng-disabled="!item.isUploading"><span class="glyphicon glyphicon-ban-circle"></span> Cancel</button> <button type="button" class="btn btn-danger btn-xs" ng-click="item.remove()"><span class="glyphicon glyphicon-trash"></span> Remove</button></td></tr></tbody></table><div><div>Queue progress:<div class="progress" style=""><div class="progress-bar" role="progressbar" ng-style="{ \'width\': uploader.progress + \'%\' }"></div></div></div><button type="button" class="btn btn-success btn-s" ng-click="uploader.uploadAll()" ng-disabled="!uploader.getNotUploadedItems().length"><span class="glyphicon glyphicon-upload"></span> Upload all</button> <button type="button" class="btn btn-warning btn-s" ng-click="uploader.cancelAll()" ng-disabled="!uploader.isUploading"><span class="glyphicon glyphicon-ban-circle"></span> Cancel all</button> <button type="button" class="btn btn-danger btn-s" ng-click="uploader.clearQueue()" ng-disabled="!uploader.queue.length"><span class="glyphicon glyphicon-trash"></span> Remove all</button></div></div></div><button type="button" class="btn btn-default" ng-click="goBack()">Back</button>'),t.put("app/components/plants/plants.html",'<h1>Plants</h1><table class="table table-striped table-hover"><thead><tr><th>Details</th><th ng-show="hasRole(\'ROLE_ADMIN\')">Delete</th><th>Species</th><th>Common Name</th></tr></thead><tbody><tr ng-repeat="plant in plants"><td style="width: 1px"><button type="button" class="btn btn-default" ng-click="viewPlantDetails(plant)"><span class="glyphicon glyphicon-search"></span></button></td><td style="width: 1px" ng-show="hasRole(\'ROLE_ADMIN\')"><button type="button" class="btn btn-danger" ng-click="deletePlant(plant)"><span class="glyphicon glyphicon-remove"></span></button></td><td>{{plant.species}}</td><td>{{plant.commonName | uppercase}}</td></tr></tbody></table><button type="button" class="btn btn-default" ng-click="addPlant()" ng-show="hasRole(\'ROLE_ADMIN\')">Add Plant</button>'),t.put("app/components/login/login.html",'<h1>Login</h1><div class="row"><div class="col-md-6"><form name="loginForm" class="form-horizontal" novalidate="" ng-submit="login()"><div class="form-group"><label for="username" class="col-sm-3 control-label">User Name</label><div class="col-sm-9"><input id="username" name="username" ng-model="user.username" type="text" class="form-control" autofocus="" required=""> <span class="glyphicon glyphicon-warning-sign form-control-feedback" ng-show="loginForm.username.$invalid"></span></div></div><div class="form-group"><label for="password" class="col-sm-3 control-label">Password</label><div class="col-sm-9"><input id="password" name="password" ng-model="user.password" type="password" class="form-control" required=""> <span class="glyphicon glyphicon-warning-sign form-control-feedback" ng-show="loginForm.password.$invalid"></span></div></div><div class="form-group"><div class="col-sm-9 col-sm-offset-3"><input type="submit" value="Log In" class="btn btn-primary" ng-disabled="loginForm.$invalid"></div></div></form></div><div class="col-md-6"><p class="alert alert-info">Login with admin:admin to add and delete plants.</p></div></div><pre>{{user}}</pre>')}]);